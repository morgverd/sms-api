# Database Configuration.
[database]
# [REQUIRED] An absolute path to the SQLite database that is used to store messages.
database_url = "/home/pi/sms-database.db"

# [REQUIRED] 32 byte encryption key, base-64 encoded. This is used to encrypt message content within the database.
# Generate with: openssl rand -base64 32.
encryption_key = "PUT_YOUR_BASE64_ENCRYPTION_KEY_HERE"

# Modem Configuration.
[modem]
# The modem serial device path.
device = "/dev/ttyS0"

# The baud rate to use when creating device connection.
baud = 115200

# Buffer size for Modem command sender channel. This is bound to ensure that slow command responses don't result in
# unexpected backpressure as we keep adding new commands to the queue. If the queue is full, API requests are rejected.
cmd_channel_buffer_size = 32

# Buffer size used for readign data from the serial port. This determines how much data can be read in a single operation,
# larger values will improve throughput by reading more data per system call however it uses more memory.
read_buffer_size = 4096

# Buffer size for the maximum size that the internal buffer size can grow to before old data is discarded.
# This determines how much data is kept for processing complte lines and large responses.
line_buffer_size = 4096

# HTTP Server Configuration.
[http]
# If the HTTP server should be started. By default, this is false. Without the HTTP server, this effectively just
# becomes an SMS reciever which can use the webhooks to forward them since the HTTP API is required for sending.
enabled = true

# The bind address used for the HTTP TcpListener.
address = "0.0.0.0:3000"

# Webhook Configuration Examples.
# You can define multiple webhooks with different configurations.

# Example 1: Basic webhook (receives only "Incoming" events).
[[webhooks]]
url = "https://webhook-a.example.org"

# Example 2: Webhook with custom headers (for authentication).
[[webhooks]]
url = "https://webhook-b.example.org"

[webhooks.headers]
Authorization = "Bearer your-token-here"
X-Other = "custom-header-value"

# Example 3: Webhook with specific event filtering.
[[webhooks]]
url = "https://webhook-c.example.org"
events = ["incoming", "outgoing", "delivery"]